import asyncio

import requests
from requests.exceptions import JSONDecodeError

from aiogram import types

from keyboards.default.main_menu import go_to_main_menu
from loader import dp

from states.users import Delete
from states.users import Change
from states.users import Register

from keyboards.default.agree_to_delete_user import agree_to_delete_user
from keyboards.default.user_menu import user_manu_keyboard

from handlers.users.start import bot_start

@dp.message_handler(content_types=['text'])
async def handler_all_text(message: types.Message):
    if message.text == '–ó–º—ñ–Ω–∏—Ç–∏':
        await message.answer('–í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤–µ —ñ–º\'—è')
        await Change.name.set()
    elif message.text == '–í–∏–¥–∞–ª–∏—Ç–∏':
        await message.answer('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –æ–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å?', reply_markup=agree_to_delete_user)
        await Delete.agree.set()
    elif message.text == '–í –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é' or message.text == '–í—Ö—ñ–¥':
        await login(message=message)
    elif message.text == '–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è':
        await message.answer('–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è')
        await message.answer('–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º\'—è')
        await Register.name.set()
    elif message.text == '–ù–∞–∑–∞–¥':
        await bot_start(message=message)
    elif message.text == '–ì—Ä–∞—Ñ—ñ–∫ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å':
        await message.answer('–ì—Ä–∞—Ñ—ñ–∫ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å –∑–∞ –∞–¥—Ä–µ—Å–æ—é –≤—É–ª. –ì–µ—Ä–æ—ó–≤ –î–Ω—ñ–ø—Ä–∞, 14, –∫–≤. 1\n\n20.05.2024 –∑ ..:.. –¥–æ ..:.. –Ω–µ –±—É–¥–µ —Å–≤—ñ—Ç–ª–∞\n\n21.05.2024 –∑ ..:.. –¥–æ ..:.. –Ω–µ –±—É–¥–µ —Å–≤—ñ—Ç–ª–∞\n\n<b>22.05.2024</b> –∑ ..:.. –¥–æ ..:.. –Ω–µ –±—É–¥–µ —Å–≤—ñ—Ç–ª–∞\n\n23.05.2024 –∑ ..:.. –¥–æ ..:.. –Ω–µ –±—É–¥–µ —Å–≤—ñ—Ç–ª–∞\n\n24.05.2024 –∑ ..:.. –¥–æ ..:.. –Ω–µ –±—É–¥–µ —Å–≤—ñ—Ç–ª–∞\n\n25.05.2024 –∑ ..:.. –¥–æ ..:.. –Ω–µ –±—É–¥–µ —Å–≤—ñ—Ç–ª–∞\n\n26.05.2024 –∑ ..:.. –¥–æ ..:.. –Ω–µ –±—É–¥–µ —Å–≤—ñ—Ç–ª–∞', reply_markup=go_to_main_menu)
    elif message.text == '–ü–æ—á–∞—Ç–∏ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è':
        await message.answer('–¢–µ–ø–µ—Ä —É —Ä–∞–∑—ñ —Å–∫–æ—Ä–æ–≥–æ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Å–≤—ñ—Ç–ª–∞ –≤–∏ –±—É–¥–µ—Ç–µ –≤—ñ–¥—Ä–∞–∑—É –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ —Ü–µ, —â–æ–± –≤–∏ –≤—Å—Ç–∏–≥–ª–∏ –ø—ñ–¥–≥–æ—Ç—É–≤–∞—Ç–∏—Å—å –¥–æ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Å–≤—ñ—Ç–ª–∞', reply_markup=go_to_main_menu)
        await asyncio.sleep(10)
        await message.answer('–£ –≤–∞—à–æ–º—É –±—É–¥–∏–Ω–∫—É —Å–∫–æ—Ä–æ –≤—ñ–¥–∫–ª—é—á–∏—Ç—å—Å—è —Å–≤—ñ—Ç–ª–æ, —Ç–æ–º—É –∑–∞—Ä—è–¥—ñ—Ç—å –≤—Å—ñ –≤–∞—à—ñ –ø—Ä–∏—Å—Ç—Ä–æ—ó, —â–æ–± –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ñ—à–µ –ø–µ—Ä–µ—á–µ–∫–∞—Ç–∏ —Ü–µ–π —á–∞—Å')
    else:
        await message.answer('–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ —Ç–∞–∫–æ—ó –∫–Ω–æ–ø–∫–∏. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ üëá', reply_markup=user_manu_keyboard)

async def login(message: types.Message):
    # responce = requests.get(f'http://localhost:8080/users/getByTelegramId/{message.chat.id}')
    # try:
    #     user = responce.json()
    #     await message.answer(f'<b>–û–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å</b>:\n\n{user["name"]} {user["surname"]}\n–î–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è: {user["dateofbirthday"]}\n–í—ñ–∫: {user["age"]}\n–ú—ñ—Å—Ç–æ: {user["city"]}', reply_markup=user_manu_keyboard)
    # except JSONDecodeError:
    #     await message.answer('–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. –ú–æ–∂–ª–∏–≤–æ –≤–∏ –Ω–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ –≤ —Å–∏—Å—Ç–µ–º—ñ')

    await message.answer(f'<b>–û–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å</b>:\n\nKolya Korovchenko\n–î–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è: 2002-12-18\n–í—ñ–∫: 21\n–ú—ñ—Å—Ç–æ: –ö–∏—ó–≤\n–ê–¥—Ä–µ—Å–∞: –≤—É–ª. –ì–µ—Ä–æ—ó–≤ –î–Ω—ñ–ø—Ä–∞, 14, –∫–≤. 1', reply_markup=user_manu_keyboard)



